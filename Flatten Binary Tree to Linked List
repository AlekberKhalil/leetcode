//recursive
public class Solution {
    public void flatten(TreeNode root) {
        if(root==null)
        return ;
        flatten(root.left);
        flatten(root.right);
        TreeNode prev=root.left;
        if(prev==null) return;
        while(prev.right!=null){
            prev=prev.right;
        }
  
        
         prev.right=root.right;
         root.right=root.left;
        
         root.left=null;
    }
       
}

/**
 * iterative
 * }
 */
public class Solution {
    public void flatten(TreeNode root) {
        Stack s = new Stack<TreeNode>();
        if(root==null)
        return;
        s.push(root);
        while(!s.empty()){
            TreeNode p=(TreeNode)s.peek();
            s.pop();
            if(p.right!=null)
            s.push(p.right);
            if(p.left!=null)
            s.push(p.left);
            if(!s.empty())
            p.right=(TreeNode)s.peek();
            p.left=null;
        }
    }
    
    
}
