public class Solution {
    /**
     * @param root: The root of binary tree.
     * @return: Level order a list of lists of integer
     */
     
     //queue错用stack，offer poll isEmpty
     //Stack push pop empty
    public ArrayList<ArrayList<Integer>> levelOrder(TreeNode root) {
        // write your code here
        ArrayList<ArrayList<Integer>> ret=new ArrayList<ArrayList<Integer>>();
        if(root==null)
        return ret;
        //queue初始化！！！！
         Queue<TreeNode> q = new LinkedList<TreeNode>();

        q.offer(root);
        
        while(!q.isEmpty()){
            ArrayList<Integer> level = new ArrayList<Integer>();
            int l = q.size();
            for(int i=0;i<l;i++){
                TreeNode cur = q.poll();
                level.add(cur.val);
                if(cur.left!=null)
                    q.offer(cur.left);
                if(cur.right!=null)
                    q.offer(cur.right);
                
            }
            //ret.add(0,level);倒序用这个
            ret.add(level);
        }
        return ret;
    }
}
