public class Solution {
    boolean[][] visited;
    public void solve(char[][] board) {
        if(board.length==0)
        return;
        visited = new boolean[board.length][board[0].length];
        for(int i=0;i<board.length;i++){
            bfs(board,i,0);
            bfs(board,i,board.length-1);
        }
        for(int j=0;j<board[0].length;j++){
            bfs(board,0,j);
            bfs(board,board[0].length-1,j);
        }
        setBoard(board);
    }
    void bfs(char[][] board,int x, int y){
        if(x<0||y<0||x>board.length-1||y>board[0].length-1||board[x][y]!='O'||visited[x][y])
            return;
        
            board[x][y] = 'H';
            visited[x][y]=true;
            bfs(board,x+1,y);
            bfs(board,x-1,y);
            bfs(board,x,y-1);
            bfs(board,x,y+1);
 
    }
    void setBoard(char[][] board){
        for(int i=0;i<board.length;i++){
            for(int j=0;j<board[0].length;j++){
                if(board[i][j]=='H')
                    board[i][j]='O';
                else
                    board[i][j]='X';
            }
        }
            
    }
    
}
